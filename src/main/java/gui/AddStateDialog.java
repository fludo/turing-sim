/*
 *   Copyright (©) 2009 | 16 January 2009 | EPFL (Ecole Polytechnique fédérale de Lausanne)
 *
 *   TuringSim is free software ; you can redistribute it and/or modify it under the terms of the
 *   GNU General Public License as published by the Free Software Foundation ; either version 3 of
 *   the License, or (at your option) any later version.
 *
 *   TuringSim is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY ;
 *   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License along with TuringSim ;
 *   if not, write to the Free Software Foundation,
 *
 *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
 *
 *
 *   Author : Ludovic Favre <ludovic.favre@epfl.ch>
 *
 *   Project supervisor : Mahdi Cheraghchi <mahdi.cheraghchi@epfl.ch>
 *
 *   Web site : http://icwww.epfl.ch/~lufavre
 *
 */
package gui;

/**
 *
 * @author Ludovic Favre
 */
public class AddStateDialog extends javax.swing.JDialog {
    private Object panel;
    private TuringMainWindow mainwindow_;
    /** Creates new form AddStateDialog */
    public AddStateDialog(SingleTapePanel panel,TuringMainWindow mainwindow,java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.mainwindow_ = mainwindow;
        this.panel = panel;
        initComponents();
    }

    public AddStateDialog(MultiTapePanel panel, TuringMainWindow mainwindow,java.awt.Frame parent, boolean modal){
        super(parent, modal);
        this.mainwindow_ = mainwindow;
        this.panel = panel;
        initComponents();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        desired_label_text = new javax.swing.JLabel();
        stateLabel = new javax.swing.JTextField();
        OkButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        attribute_text = new javax.swing.JLabel();
        CheckBoxisStarting = new javax.swing.JCheckBox();
        radioAccepting = new javax.swing.JRadioButton();
        radioRejecting = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N
        setResizable(false);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gui.TuringApp.class).getContext().getResourceMap(AddStateDialog.class);
        desired_label_text.setText(resourceMap.getString("desired_label_text.text")); // NOI18N
        desired_label_text.setName("desired_label_text"); // NOI18N

        stateLabel.setText(resourceMap.getString("stateLabel.text")); // NOI18N
        stateLabel.setName("stateLabel"); // NOI18N

        OkButton.setText(resourceMap.getString("OkButton.text")); // NOI18N
        OkButton.setName("OkButton"); // NOI18N
        OkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OkButtonMouseClicked(evt);
            }
        });

        CancelButton.setText(resourceMap.getString("CancelButton.text")); // NOI18N
        CancelButton.setName("CancelButton"); // NOI18N
        CancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CancelButtonMouseClicked(evt);
            }
        });

        attribute_text.setText(resourceMap.getString("attribute_text.text")); // NOI18N
        attribute_text.setName("attribute_text"); // NOI18N

        CheckBoxisStarting.setText(resourceMap.getString("CheckBoxisStarting.text")); // NOI18N
        CheckBoxisStarting.setName("CheckBoxisStarting"); // NOI18N

        radioAccepting.setText(resourceMap.getString("radioAccepting.text")); // NOI18N
        radioAccepting.setName("radioAccepting"); // NOI18N
        radioAccepting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioAcceptingMouseClicked(evt);
            }
        });

        radioRejecting.setText(resourceMap.getString("radioRejecting.text")); // NOI18N
        radioRejecting.setName("radioRejecting"); // NOI18N
        radioRejecting.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                radioRejectingMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(desired_label_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(attribute_text)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioRejecting)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioAccepting))
                            .addComponent(CheckBoxisStarting)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(OkButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(CancelButton))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(desired_label_text)
                    .addComponent(stateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attribute_text)
                    .addComponent(CheckBoxisStarting))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioAccepting)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(radioRejecting)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(OkButton)
                            .addComponent(CancelButton))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {radioAccepting, radioRejecting});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OkButtonMouseClicked
       if(panel instanceof SingleTapePanel){
             ((SingleTapePanel)panel).addStateToList(new core.State(this.stateLabel.getText()),this.CheckBoxisStarting.isSelected(),
                     this.radioAccepting.isSelected(),this.radioRejecting.isSelected());
             //System.out.println("Added singletapepanel state !");
       }
       else{
             ((MultiTapePanel)panel).addStateToList(new core.State(this.stateLabel.getText()),this.CheckBoxisStarting.isSelected(),
                     this.radioAccepting.isSelected(),this.radioRejecting.isSelected());
            //System.out.println("Added multitapepanel state !");
       }
       
       this.dispose();
    }//GEN-LAST:event_OkButtonMouseClicked

    private void CancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CancelButtonMouseClicked
        this.dispose();
    }//GEN-LAST:event_CancelButtonMouseClicked

    private void radioAcceptingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioAcceptingMouseClicked
        if(radioRejecting.isSelected()){
            radioRejecting.setSelected(false);
        }
    }//GEN-LAST:event_radioAcceptingMouseClicked

    private void radioRejectingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_radioRejectingMouseClicked
        if(radioAccepting.isSelected()){
            radioAccepting.setSelected(false);
        }
    }//GEN-LAST:event_radioRejectingMouseClicked

    /**
    * @param args the command line arguments
    */
   /* public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddStateDialog dialog = new AddStateDialog(null,null,new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelButton;
    private javax.swing.JCheckBox CheckBoxisStarting;
    private javax.swing.JButton OkButton;
    private javax.swing.JLabel attribute_text;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel desired_label_text;
    private javax.swing.JRadioButton radioAccepting;
    private javax.swing.JRadioButton radioRejecting;
    private javax.swing.JTextField stateLabel;
    // End of variables declaration//GEN-END:variables

}
