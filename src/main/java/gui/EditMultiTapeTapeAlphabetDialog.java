/*
 *   Copyright (©) 2009 | 16 January 2009 | EPFL (Ecole Polytechnique fédérale de Lausanne)
 *
 *   TuringSim is free software ; you can redistribute it and/or modify it under the terms of the
 *   GNU General Public License as published by the Free Software Foundation ; either version 3 of
 *   the License, or (at your option) any later version.
 *
 *   TuringSim is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY ;
 *   without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *   GNU General Public License for more details.
 *
 *   You should have received a copy of the GNU General Public License along with TuringSim ;
 *   if not, write to the Free Software Foundation,
 *
 *   Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA.
 *
 *
 *   Author : Ludovic Favre <ludovic.favre@epfl.ch>
 *
 *   Project supervisor : Mahdi Cheraghchi <mahdi.cheraghchi@epfl.ch>
 *
 *   Web site : http://icwww.epfl.ch/~lufavre
 *
 */
package gui;

import core.Alphabet;
import java.util.HashSet;

/**
 *
 * @author Ludovic Favre
 */
public class EditMultiTapeTapeAlphabetDialog extends javax.swing.JDialog {

    private HashSet<String> labels_;
    private MultiTapePanel panel_;
    private boolean inited_ = false;

    /** Creates new form EditMultiTapeTapeAlphabetDialog */
    public EditMultiTapeTapeAlphabetDialog(java.awt.Frame parent, boolean modal, MultiTapePanel panel, HashSet<String> labels) {
        super(parent, modal);
        this.panel_ = panel;
        this.labels_ = labels;

        initComponents();

        initSelection();
        this.tapeComboBox.setSelectedIndex(0);
        refreshAlphabet();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        alphabetTextField = new javax.swing.JTextField();
        alphabetLabel = new javax.swing.JLabel();
        hintLabel = new javax.swing.JLabel();
        validateButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        tapeComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        alphabetTextField.setText("UNSET");
        alphabetTextField.setName("alphabetTextField"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(gui.TuringApp.class).getContext().getResourceMap(EditMultiTapeTapeAlphabetDialog.class);
        alphabetLabel.setText(resourceMap.getString("alphabetLabel.text")); // NOI18N
        alphabetLabel.setName("alphabetLabel"); // NOI18N

        hintLabel.setFont(resourceMap.getFont("hintLabel.font")); // NOI18N
        hintLabel.setText(resourceMap.getString("hintLabel.text")); // NOI18N
        hintLabel.setName("hintLabel"); // NOI18N

        validateButton.setText(resourceMap.getString("validateButton.text")); // NOI18N
        validateButton.setName("validateButton"); // NOI18N
        validateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validateButtonMouseClicked(evt);
            }
        });

        cancelButton.setText(resourceMap.getString("cancelButton.text")); // NOI18N
        cancelButton.setName("cancelButton"); // NOI18N
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });

        tapeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[]{}));
        tapeComboBox.setName("tapeComboBox"); // NOI18N
        tapeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tapeComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hintLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(validateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addComponent(alphabetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alphabetLabel)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addComponent(tapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(189, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alphabetLabel)
                .addGap(10, 10, 10)
                .addComponent(alphabetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hintLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(validateButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void validateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validateButtonMouseClicked
        this.panel_.newTapeAlphabetIs((String)this.tapeComboBox.getSelectedItem(),new Alphabet(this.alphabetTextField.getText()));

        this.dispose();
}//GEN-LAST:event_validateButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.dispose();
}//GEN-LAST:event_cancelButtonMouseClicked

    private void tapeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tapeComboBoxActionPerformed
        this.refreshAlphabet();
    }//GEN-LAST:event_tapeComboBoxActionPerformed

    private void initSelection() {
        if (inited_) {
            this.tapeComboBox.removeAllItems();
            for (String string : labels_) {
                this.tapeComboBox.addItem(string);
            }
        } else {
            inited_ = true;
            for (String string : labels_) {
                this.tapeComboBox.addItem(string);
            }
        }

    }

    private void refreshAlphabet() {
        String itemLabel = ((String) this.tapeComboBox.getModel().getSelectedItem()).toString();

        if (this.panel_.tapeAlphabet(itemLabel) != null) {
            this.alphabetTextField.setText(this.panel_.tapeAlphabet((String) this.tapeComboBox.getModel().getSelectedItem()).toString());
        } else {
            // System.out.println("FAILED TO RECOVER ITEM LABEL ! ");
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alphabetLabel;
    private javax.swing.JTextField alphabetTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel hintLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox tapeComboBox;
    private javax.swing.JButton validateButton;
    // End of variables declaration//GEN-END:variables
}
